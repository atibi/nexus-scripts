{
  "name": "findByGroupIdAndExtension",
  "type": "groovy",
  "content": "import groovy.json.JsonOutput;import groovy.json.JsonSlurper;import org.sonatype.nexus.repository.storage.Asset;import org.sonatype.nexus.repository.storage.Query;import org.sonatype.nexus.repository.storage.StorageFacet;def request = new JsonSlurper().parseText(args); assert request.repoName: 'Maven repoName parameter is required'; assert request.groupId: 'Maven groupId parameter is required'; assert request.extension: 'Maven extension parameter is required'; log.info('Listing ' + request.extension + ' artifacts of repository: ' + request.repoName + ' with groupId: ' + request.groupId); def repo = repository.repositoryManager.get(request.repoName); StorageFacet storageFacet = repo.facet(StorageFacet); def tx = storageFacet.txSupplier().get(); def attributes = []; try {tx.begin();Iterable<Asset> assets = tx.findAssets(Query.builder().where('component.group').eq(request.groupId).and('name like').param('%.' + request.extension).build(), [repo]); attributes = assets.collect { it.attributes()['maven2'] };tx.commit();} catch (Exception ignored) {tx.rollback();}finally {tx.close();}; def artifacts = attributes.collect({['version': it['baseVersion'], 'artifactId': it['artifactId'], 'groupId': it['groupId'], 'extension': it['extension']]}); def result = JsonOutput.toJson(['artifacts': artifacts.unique(), 'groupId': request.groupId, 'repoName': request.repoName, 'extension': request.extension]); return result;"
}